<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             x:Name="SquaresPageInstance"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MobileGridGames.Views.SquaresPage"
             xmlns:localviews="clr-namespace:MobileGridGames.Views"
             xmlns:vm="clr-namespace:MobileGridGames.ViewModels"
             xmlns:imageeditor="clr-namespace:Syncfusion.SfImageEditor.XForms;assembly=Syncfusion.SfImageEditor.XForms"
             BackgroundColor="{DynamicResource PageBackgroundColor}"
             Title="{Binding Title}">

    <Shell.TitleView>
        <Grid BackgroundColor="{DynamicResource Primary}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Text="Squares"
                TextColor="{DynamicResource GameTitleBarTextColor}" VerticalOptions="Center"
                FontSize="Title" />
            <Button Grid.Column="1" Text="&#xf013;" Clicked="SquaresGameSettingsButton_Clicked"
                FontFamily="FA" FontSize="Title" HorizontalOptions="End"
                AutomationProperties.Name="Squares Settings"
                IsVisible="{Binding GameIsLoading, Converter={StaticResource GameIsLoadingToVisibility}}"/>
        </Grid>
    </Shell.TitleView>
    
    <ContentPage.BindingContext>
        <vm:SquaresViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <localviews:GameIsLoadingToSquaresOpacity x:Key="GameIsLoadingToSquaresOpacity" />
            <localviews:GameIsLoadingToVisibility x:Key="GameIsLoadingToVisibility" />
            <localviews:CollectionViewHeightToRowHeight x:Key="CollectionViewHeightToRowHeight" />
            <localviews:NumberSizeIndexToGridRowHeight x:Key="NumberSizeIndexToGridRowHeight" />
            <localviews:LabelContainerHeightToFontSize x:Key="LabelContainerHeightToFontSize" />
            <localviews:SquareTargetIndexToIsVisible x:Key="SquareTargetIndexToIsVisible" />
            <localviews:SquareTargetIndexToContainerFrameVisibility x:Key="SquareTargetIndexToContainerFrameVisibility" />
            <localviews:SquareTargetIndexToBackgroundColor x:Key="SquareTargetIndexToBackgroundColor" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid x:Name="PageGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="0" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- The SfImageEditor is used to programmatically crop the picture in order to show it
            on the squares, and is never shown to the player. -->
        <imageeditor:SfImageEditor Grid.Row="0" x:Name="GridGameImageEditor" 
            IsVisible="False"
            ImageLoaded="GridGameImageEditor_ImageLoaded" 
            ImageEdited="GridGameImageEditor_ImageEdited"                                              
            ImageSaving="GridGameImageEditor_ImageSaving"
            EndReset="GridGameImageEditor_EndReset" />

        <CollectionView Grid.Row="1"
            x:Name="SquaresCollectionView"
            Opacity="{Binding GameIsLoading, Converter={StaticResource GameIsLoadingToSquaresOpacity}}"
            SelectionMode="Single" 
            SelectionChanged="SquaresGrid_SelectionChanged"
            ItemsSource="{Binding SquareListCollection}">
            
            <CollectionView.ItemsLayout>
                <GridItemsLayout Orientation="Vertical" Span="4" />
            </CollectionView.ItemsLayout>

            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <Grid HeightRequest="{Binding Source={RelativeSource AncestorType={x:Type CollectionView}}, 
                        Path=Height, Converter={StaticResource CollectionViewHeightToRowHeight}}"
                        BackgroundColor="{DynamicResource GridBackgroundColor}"
                        AutomationProperties.Name="{Binding AccessibleName}"
                        AutomationProperties.HelpText="{Binding AccessibleDescription}">
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                        </Grid.GestureRecognizers>
                        <Frame Margin="2" Padding="0"
                            BackgroundColor="{Binding TargetIndex, 
                                Converter={StaticResource SquareTargetIndexToBackgroundColor}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition 
                                        x:Name="SquareNumberGridRow"
                                        Height="{Binding
                                            Source={x:Reference SquaresPageInstance},
                                            Path=BindingContext.NumberHeight,
                                            Mode=OneWay,
                                            Converter={StaticResource NumberSizeIndexToGridRowHeight},
                                            ConverterParameter=0}" />
                                    <RowDefinition 
                                        Height="{Binding
                                            Source={x:Reference SquaresPageInstance},
                                            Path=BindingContext.NumberHeight,
                                            Mode=OneWay,
                                            Converter={StaticResource NumberSizeIndexToGridRowHeight},
                                            ConverterParameter=1}" />
                                </Grid.RowDefinitions>

                                <Image Grid.Row="0" Grid.RowSpan="2"
                                    Source="{Binding PictureImageSource}"
                                    Aspect="Fill"
                                    InputTransparent="True">
                                    <Image.IsVisible>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource SquareTargetIndexToIsVisible}">
                                            <Binding Path="TargetIndex" />
                                            <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.ShowPicture" />
                                        </MultiBinding>
                                    </Image.IsVisible>
                                </Image>
                                
                                <Grid Grid.Row="0" x:Name="LabelPanel"
                                    BackgroundColor="Transparent"
                                    IsVisible="{Binding
                                    Source={x:Reference SquaresPageInstance},
                                    Path=BindingContext.ShowNumbers}">
                                    <Frame Margin="0" Padding="0" HorizontalOptions="Start"
                                        BorderColor="Transparent"
                                        BackgroundColor="{Binding TargetIndex, 
                                            Converter={StaticResource SquareTargetIndexToBackgroundColor}}"
                                        IsVisible="{Binding TargetIndex, 
                                            Converter={StaticResource SquareTargetIndexToContainerFrameVisibility}}">
                                        <Label Text="{Binding VisualLabel}"
                                            TextColor="{DynamicResource SquaresNumberTextColor}"                                               
                                            Margin="2,0,4,0"
                                            HorizontalOptions="Center" VerticalOptions="Center"
                                            HeightRequest="{Binding Source={RelativeSource AncestorType={x:Type Grid}}, Path=Height}">
                                            <Label.FontSize>
                                                <!-- Don't only bind to the grid height here, as that leaves the FontSize zero when
                                                    ShowNumbers is set true after moving squares when ShowNumbers is false. -->
                                                <MultiBinding Mode="OneWay" 
                                                    Converter="{StaticResource LabelContainerHeightToFontSize}">
                                                    <Binding Source="{x:Reference SquaresPageInstance}"
                                                        Path="BindingContext.ShowNumbers" />
                                                    <Binding Source="{RelativeSource AncestorType={x:Type Grid}}" 
                                                        Path="Height" />
                                                </MultiBinding>
                                            </Label.FontSize>
                                        </Label>
                                    </Frame>
                                </Grid>
                                <StackLayout Grid.Row="1" BackgroundColor="Transparent" />
                            </Grid>
                        </Frame>
                    </Grid>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <!-- Show a message when the pictures are being loaded into the squares. -->
        <Frame Grid.Row="1"
            IsVisible="{Binding GameIsLoading}"
            BorderColor="{DynamicResource SquaresNumberTextColor}"
            BackgroundColor="{DynamicResource PageBackgroundColor}"
            AutomationProperties.Name="Loading pictures, please wait."
            VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand">
            <Label x:Name="PleaseWaitLabel" 
                Text="Please wait a moment while the pictures are loaded into the squares." 
                FontSize="Large" FontAttributes="Bold" />
        </Frame>

    </Grid>

</ContentPage>
