<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MobileGridGames.Views.HelpPage">
    <ContentPage.Content>
        <Grid Grid.Row="0" Padding="10"
            BackgroundColor="{DynamicResource PageBackgroundColor}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Label x:Name="SquaresGameHelpTitle" Grid.Row="0" Text="Squares Game Help" FontSize="Title" />
            <Label x:Name="MatchingGameHelpTitle" Grid.Row="0" Text="Pairs Help" FontSize="Title" />
            <StackLayout x:Name="SquaresGameHelpContent" Grid.Row="1">
                <ScrollView Margin="4,4,4,2">
                    <Label VerticalOptions="Center" FontSize="Medium">
                        <Label.Text>
The Squares Game is based on a square sliding puzzle, where squares in a grid of squares are rearranged by the player to form an ordered sequence in the grid.

When the game is run, a 4 by 4 grid of squares appears, with fifteen of those squares occupied with a movable element, and one square being empty. When a square is tapped, if it is adjacent to the empty square, the tapped square moves into the empty square. The space where the tapped square was then becomes the empty square. The aim is to arrange all the squares in a sorted order, leaving the empty square in the bottom right corner of the grid. Once all the squares are ordered, a "Congratulations" window appears.

Tip: Don't use a swipe gesture to move a square. Support for swipe gestures has yet to be added to the game.

Tip: Don't tap on the empty square. Instead tap on the squares next to the empty square.

When the game first runs, the setting to have numbers shown on squares is on, and the settings to have pictures shown on the squares is off. This means a number is shown in the top left corner of the squares. When the squares are sorted, the square showing number 1 is at the top left of the grid, and the numbers increase from left to right then top to bottom.

Tip: Practice moving numbered squares around before changing the setting to have a picture shown on the squares.

When the game setting to have a picture shown on the squares is on, then a single picture is shown across all the squares. The sections of the picture will appear jumbled until the squares are arranged in their sorted order.

Ways to play the game:

Tapping with a finger. Tap the square to be moved.

TalkBack. Turn on the Android TalkBack feature, and move your finger around the screen to have the number of the square beneath your finger announced. If TalkBack moves between rows or columns in the grid of squares, it will announce the new row or column. Double tap to move a square.

Please note that the accessible name of the Menu button near the top left corner of the app has a name of "OK". When that button is tapped, the menu will appear.

Voice Access. Activate the Android Voice Access feature, and speak the number shown on a square to move the square.

Please note that Voice Access only works today in the Squares game if numbers are shown on the squares.

Switch Access. Activate the Android Switch Access feature, scan to the square to be moved and then press the switch to move the square.

Size of Text. The game respects the Android Font size and Display size settings, and also has its own in-app text size setting which only applies to text in shown on the squares in the game.

Magnification. The standard use of the Android Magnification feature can be used when playing this game.
                        </Label.Text>
                    </Label>
                </ScrollView>
            </StackLayout>
            <StackLayout x:Name="MatchingGameHelpContent" Grid.Row="1">
                <ScrollView Margin="4,4,4,2">
                    <Label VerticalOptions="Center" FontSize="Medium">
                        <Label.Text>
The Matching Game is based on a traditional card matching game, where face-down cards are turned over in order to find pairs of cards.

When the game is run, a 4 by 4 grid of blank squares appears, each square representing a card. When a card is tapped, an image is shown on the card. When another card is clicked, an image is also shown on that second card. If the two images are the same, then the cards are considered to be matched, and will not change again for the rest of the game. If the images do not match, then the cards are considered to be unmatched, and cards must be turned back over by tapping on any card. These steps are to be repeated until all matching images have been found, and a "Congratulations" window appears.

Ways to play the game:

Tapping with a finger: Tap the card to be turned up. When two mismatched cards have been turned up, tap on any card to turned those cards back down.

TalkBack. Turn on the Android TalkBack feature, and move your finger around the screen to have the number of the card beneath your finger announced. If TalkBack moves between rows or columns in the grid of squares, it will announce the new row or column. Double tap to turn up a card. When a turned up card is matched, its name will be prefixed with "Matched".

Please note that the accessible name of the Menu button near the top left corner of the app currently has a name of "OK". This will be changed to have a name of "Menu" at some point.

Voice Access. Activate the Android Voice Access feature, and say a number from 1 to 16. The cards are considered to be ordered from the top left corner of the grid to the bottom right corner, numbering from left to right then top to bottom. The card whose number has been spoken will be turned over.

Switch Access. Activate the Android Switch Access feature, scan to the card to be turned up and then press the switch to turn up the card.

Size of Text. The game respects the Android Font size and Display size settings.

Magnification. The standard use of the Android Magnification feature can be used when playing this game.
                        </Label.Text>
                    </Label>
                </ScrollView>
            </StackLayout>
            <Button Grid.Row="2" x:Name="CloseButton" 
                HorizontalOptions="End" Margin="0,0,4,4"
                Text="Close" Clicked="CloseButton_Clicked" />
        </Grid>
    </ContentPage.Content>
</ContentPage>